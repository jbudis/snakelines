include: config['snake_dir'] + '/mapping/postprocess/bam_index.snake'
include: config['snake_dir'] + '/variant/callers/mpileup.snake'
include: config['snake_dir'] + '/variant/postprocess/index.snake'

map_type = config['variant']['map_type']
map_subdir = '%s/' % map_type if map_type else ''

rule call_snps:
    input:
        bam = '{mapper}/{reference}/%s{sample}.bam' % map_subdir,
        bai = '{mapper}/{reference}/%s{sample}.bam.bai' % map_subdir,
        bed = 'reference/{reference}/annotation/{panel}/regions.bed',
        reffasta = 'reference/{reference}/{reference}.fa',
        reffaidx = 'reference/{reference}/{reference}.fa.fai'
    output:
        '{mapper}/{reference}/variants/{sample}.{panel}.varscan.snp.germline.vcf'
    shell:
        '''
        samtools mpileup \
            --positions {input.bed} \
            --fasta-ref {input.reffasta} \
            {input.bam} \
        | varscan mpileup2snp \
            --output-vcf \
        > {output}
        '''


rule call_indels:
    input:
        bam = '{mapper}/{reference}/%s{sample}.bam' % map_subdir,
        bai = '{mapper}/{reference}/%s{sample}.bam.bai' % map_subdir,
        bed = 'reference/{reference}/annotation/{panel}/regions.bed',
        reffasta = 'reference/{reference}/{reference}.fa',
        reffaidx = 'reference/{reference}/{reference}.fa.fai'
    output:
        '{mapper}/{reference}/variants/{sample}.{panel}.varscan.indel.germline.vcf'
    shell:
        '''
        samtools mpileup \
            --positions {input.bed} \
            --fasta-ref {input.reffasta} \
            {input.bam} \
        | varscan mpileup2indel \
            --output-vcf \
        > {output}
        '''

rule concat_calls:
    input:
        indels = '{mapper}/{reference}/variants/{sample}.{panel}.varscan.indel.germline.vcf.gz',
        indels_idx = '{mapper}/{reference}/variants/{sample}.{panel}.varscan.indel.germline.vcf.gz.tbi',
        snps = '{mapper}/{reference}/variants/{sample}.{panel}.varscan.snp.germline.vcf.gz',
        snps_idx = '{mapper}/{reference}/variants/{sample}.{panel}.varscan.snp.germline.vcf.gz.tbi'
    output:
        '{mapper}/{reference}/variants/{sample}.{panel}.varscan.germline.vcf'
    shell:
        '''
        vcf-merge \
            {input.indels} \
            {input.snps} \
        > {output}
        '''
