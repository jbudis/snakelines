sequencing: paired_end

samples:                            # List of sample categories to be analysed
    - name: .*                      # Use all reads in reads/original
      reference: silva-16S-90-filtered  # Reference genome for reads in the category (reference/silva-16S-90-filtered/silva-16S-90-filtered.fa)
      description:                  # Creates metadata file (description/sample-metadata.tsv)
        overwrite: True             # allowed True or False, defines whether to overwrite created metadata file
        format: '{year}-{wine}-{additive}-{material}-{rRNA}-{phase}-{biological_replica}-{technical_replica}' # napr. 2021-R-S_R1.fastq.gz
        attributes:                 
            year:
                # type: int # if not set, qiime2 infers type automatically
                values:
                    17: 2017
                    18: 2018
                    19: 2019
                    20: 2020
            wine:
                type: categorical
                values:
                    rb: rulandske biele
            additive:
                type: categorical
                values:
                    noth: nothing added
                    ctrl: control - commercial Saccharomyces cerevisiae only
                    sace: Saccharomyces serevisiae
                    mesa: Metschnikowia pulcherrima and Saccharomyces cerevisiae
                    lasa: Lachancea thermotolerans and Saccharomyces cerevisiae
                    must: initial must
            material:
                type: categorical
                values:
                    dna: DNA
                    rna: RNA
            rRNA:
                type: categorical
                values:
                    16S: 16S
                    28S: 28S
            phase:
                type: categorical
                values:
                    m0: initial must
                    m1: must
                    m2: fermented must
                    m3: young wine
                    m4: wine before filtration
                    m5: wine after filtration
            biological_replica:
                type: categorical
                values:
                    repA: first replica
                    repB: second replica
                    repC: third replica
            technical_replica:
                type: categorical
                values:
                    1: 1
                    2: 2
                    3: 3


report_dir: report                      # Generated reports and essential output files would be stored there
threads: 2                              # Number of threads to use in analysis


qiime2:
    import:
        manifest:
            method: create_manifest     # allowed: 'create_manifest', this creates a manifest tsv file with all input reads
        data:
            method: import              # allowed: 'import', this creates a qza from all reads that are in the created tsv manifest file
            PHRED_offset: 33            # allowed: 33,64 (33 used in Sanger, Illumina1.8, 64 used in Illumina 1.3), default: 33
    
    preprocess:
        demultiplex:
            method: cutadapt            # Allowed 'cutadapt'. See https://docs.qiime2.org/2021.8/plugins/available/cutadapt/trim-paired/
            minlen: 35                  # Minimal length of trimmed read. Shorter reads would be removed. (Must be higher or equal to 1, default: 1)
            max_error_rate: 0.1         # Maximum allowed error rate (Must be from range 0-1, default: 0.1)
            primer_set: 16S             # Allowed '16S','ITS','28S'. Defines primer sequences that will be trimmed. Defined in rules/shared/qiime2/preprocess/demultiplex/cutadapt
            adapter_set: None           # Allowed 'Illumina' or 'None'. When set, sequencing adapters of that set are cut with primers, when 'None' trimmed are only primers
            discard_undetected: False   # Whether to discard reads where adapter was not found, default: False
            
        denoise:                        # For dada2 API see https://docs.qiime2.org/2021.8/plugins/available/dada2/denoise-paired/
            method: dada2               # Allowed only 'dada2' for now # deblur (requires quality_filter and joining if paired-end)
            trunc_len_f: 0              # Defines position where truncation starts on forward, discard read if shorter. If set to 0, dont do truncation
            trunc_len_r: 0              # Defines position where truncation starts on reverse, discard read if shorter. If set to 0, dont do truncation
            trim_left_f: 0              # How many bases will be trimmed from start on forward, set to 0 for no trimming (default: 0)
            trim_left_r: 0              # How many bases will be trimmed from start on reverse, set to 0 for no trimming (default: 0)
            trunc_start_qual: 5         # truncate read from the first occurence of quality lower than this value, (default: 2)
            max_ee_f: 4.0               # After trunc and trim, forward reads with expected error rate (calculated by dada2) higher than this value are discarded (default: 2.0)
            max_ee_r: 4.0               # After trunc and trim, reverse reads with expected error rate (calculated by dada2) higher than this value are discarded (default: 2.0)
            min_overlap: 12             # Minimal length of overlap required when merging forward and reverse reads (default: 12)
            denoise_pooling: independent    # allowed 'independent', 'pseudo'; denoise samples independently, or use pseudo-pooling (default: independent)
            chimera_method: consensus       # allowed 'consensus', 'pooled', 'none' (default: consensus)
            chimera_parent_abundance: 2.0   # when tested for chimeric, this gives the minimum abundance of parents. When higher, chimera detection is less rigorous (default: 1.0)
            num_reads_train: 1000000        # number of reads used for training error model, lower number = faster, but less reliable model (default: 1000000)

    report:
        #core_features: automaticky alebo nutne definovat?
            #https://docs.qiime2.org/2021.8/plugins/available/feature-table/core-features/
        #heatmap:
            #https://docs.qiime2.org/2021.8/plugins/available/feature-table/heatmap/
        feature_table:
            method: feature_table

        export:
            method: export              # Allowed 'export'. This tells snakelines to export each .qzv into human readable .html form
            #representative_seqs: True #
            #feature_table: True
            #denoising_stats: True
            #core_features: True
            #heatmap: True

        # 3 pipelines:
            # dada2 -> ASVs
            # (join-pairs), quality filter, deblur -> ASVs 
            # (join-pairs), quality filter, dereplicate, OTU clustering, chimera, abundance filtering -> OTUs

        #quality_filter:         # required when using DEBLUR
        #    method: qscore      # see https://docs.qiime2.org/2021.8/plugins/available/quality-filter/q-score/
        #    min_quality: 4      # scores less than this value are considered low 
        #    window_size: 3      # low score succession longer than this value are truncated from read
        #    min_length_fraction: 0.75 #if truncating results in read length of lesser fraction than this value, then read is not kept
        #    max_ambiguous: 0    # how many ambiguous bases can occur in truncated read

        #joining...

        #dereplicate:
        #    method: vsearch_dereplicate_sequences # allowed 'vsearch_dereplicate_sequences'
        
        #clustering...

    # Possible filtering
    # label: 
    #filter:
    #    method: filter_samples
    #    label: only_2019
    #    column: year
    #    conditions:
    #      - equals: 2019

    analysis:
        phylogeny:                                  # Constructs phylogeny tree
            method: fasttree                        # Allowed: fasttree, iqtree, raxml
            max_gap_freq: 1.0                       # Valid for all methods, must be float 0-1. Defines max frequency of gap characters in a column for the column to be retained (if 1 - retains all, default: 1.0)
            min_conservation: 0.4                   # Valid for all methods, must be float 0-1. Defines min relative frequency of at least one non-gap character in a column for that column to be retained (if 0.4, column must contain a gapless character occuring at least 40% of sequences, default: 0.4)
            substitution_model: 'MFP'               # Valid for iqtree and raxml, not used in fasttree. Defines nucleotide substitution model (default: 'MFP' for iqtree, 'GTRGAMMA' for raxml)
            fast_mode: False                        # Valid for iqtree, defines whether to simulate fasttree search in iqtree (default: False)
        
        core_metrics:                               # Produces a collection of diversity metrics to constructed feature table
            method: phylogenetic                    # Allowed 'phylogenetic' # 'nonphylogenetic' - not done
            sampling_depth: auto                    # Frequency that each sample should be rarefied to prior to computing diversity metrics, auto = lowest count of sequences (default: auto)
            alpha_types:                            # Allowed: 'evenness', 'shannon', 'observed', 'faith_pd' (invalid in nonphylogenetic)
                - evenness
                - faith_pd
                - observed
                - shannon
            beta_types:                             # Allowed: 'bray_curtis', 'jaccard', 'unweighted_unifrac' and 'weighted_unifrac' (both invalid in nonphylogenetic)
                - bray_curtis
                - jaccard
                - unweighted_unifrac
                - weighted_unifrac
            emperor_types:                          # Allowed: 'bray_curtis', 'jaccard', 'unweighted_unifrac' and 'weighted_unifrac' (both invalid in nonphylogenetic)
                - bray_curtis
                - jaccard
                - unweighted_unifrac
                - weighted_unifrac

        diversity:
            alpha:                                  # Uses alpha_types list from core_metrics above
                method: alpha_group_significance    # Allowed 'alpha_group_significance'
            beta:                                   # Uses beta_types list from core_metrics above
                method: beta_group_significance     # Allowed 'beta_group_significance'
                pairwise_tests: True                # When set to true, do tests between all pairs of groups in addition to the test across all groups
                test_method: 'permanova'            # Defines which group significance test to apply, allowed 'permanova', 'anosim', 'permdisp', (default: 'permanova')
                columns:                            # Define columns from metadata
                    - additive
            pcoa_explore:                           # Uses beta_types list from core_metrics above
                method: emperor                     # Allowed 'emperor', creates Emperor plots of the PCoA results to explore groups or time using numeric metadata column
                columns:                            # Define columns from metadata, must be numeric, either set in metadata file as numeric type or empty type
                    - year

            #alpha_rarefaction:
            #beta_rarefaction:

        #taxonomy:
            #fit:
                #method:
            #classify:
                #method:
        
        #longitudinal: https://docs.qiime2.org/2021.8/tutorials/longitudinal/
            #pairwise-differences
                #method: pairwise-differences
            #pairwise-distances:
                #method: pairwise-distances
            #effect_model:
                #method: linear-mixed-effects
            #volatility
            #feature_volatility
            #maturity_index

        #differential abundance:
            # ANCOM https://docs.qiime2.org/2021.8/tutorials/moving-pictures/#ancom
            # gneiss https://docs.qiime2.org/2021.8/tutorials/gneiss/ 
        #quality_evaluation https://docs.qiime2.org/2021.8/tutorials/quality-control/

        #predictions? https://docs.qiime2.org/2021.8/tutorials/sample-classifier/    