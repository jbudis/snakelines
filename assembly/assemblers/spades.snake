read_type = config['assembly']['read_type']

rule assembly:
    input:
        r1 = 'reads/%s/{sample}_R1.fastq.gz' % read_type,
        r2 = 'reads/%s/{sample}_R2.fastq.gz' % read_type
    params:
        outdir = 'spades-standard/{sample}'
    output:
        graph = 'spades-standard/{sample}/assembly_graph.fastg',
        contigs = 'spades-standard/{sample}/contigs.fasta'
    threads:
        int(config['threads'])
    log:
        'spades-standard/{sample}/log/spades.log'
    shell:
        '''
        /usr/local/tools/spades-3.10.0/bin/spades.py \
            -1 {input.r1} \
            -2 {input.r2} \
            --careful \
            --threads {threads} \
            -o {params.outdir} \
            -k 21,33,55,77 \
        >  {log} \
        2> {log}
        '''

rule assembly_standard:
    input:
        r1 = 'reads/%s/{sample}_R1.fastq.gz' % read_type,
        r2 = 'reads/%s/{sample}_R2.fastq.gz' % read_type
    params:
        outdir = 'spades_{type}/{sample}'
    output:
        contigs = 'spades_{type}/{sample}/contigs.fasta'
    threads:
        int(config['threads'])
    log:
        'spades_{type}/{sample}/log/spades.log',
        'spades_{type}/{sample}/log/spades.err'
    shell:
        '''
        /usr/local/tools/spades-3.10.0/bin/spades.py \
            -1 {input.r1} \
            -2 {input.r2} \
            --careful \
            --threads {threads} \
            -o {params.outdir} \
        > {log[0]} \
        2> {log[1]}
        '''

rule assembly_meta:
    input:
        r1 = 'reads/%s/{sample}_R1.fastq.gz' % read_type,
        r2 = 'reads/%s/{sample}_R2.fastq.gz' % read_type
    params:
        outdir = 'spades-meta/{sample}'
    output:
        graph = 'spades-meta/{sample}/assembly_graph.fastg',
        contigs = 'spades-meta/{sample}/contigs.fasta'
    threads:
        int(config['threads'])
    log:
        'spades-meta/{sample}/log/spades.log'
    shell:
        '''
        /usr/local/tools/spades-3.10.0/bin/spades.py \
            --meta \
            -1 {input.r1} \
            -2 {input.r2} \
            --threads {threads} \
            -o {params.outdir} \
        >  {log} \
        2> {log}
        '''

rule assembly_plasmid:
    input:
        r1 = 'reads/%s/{sample}_R1.fastq.gz' % read_type,
        r2 = 'reads/%s/{sample}_R2.fastq.gz' % read_type
    params:
        outdir = 'spades-plasmid/{sample}'
    output:
        graph = 'spades-plasmid/{sample}/assembly_graph.fastg',
        contigs = 'spades-plasmid/{sample}/contigs.fasta'
    threads:
        int(config['threads'])
    log:
        'spades-plasmid/{sample}/log/spades.log'
    shell:
        '''
        /usr/local/tools/spades-3.10.0/bin/spades.py \
            --plasmid \
            --careful \
            -1 {input.r1} \
            -2 {input.r2} \
            --threads {threads} \
            -o {params.outdir} \
        >  {log} \
        2> {log}
        '''

rule assembly_transcriptome:
    input:
        r1 = 'reads/%s/{sample}_R1.fastq.gz' % read_type,
        r2 = 'reads/%s/{sample}_R2.fastq.gz' % read_type
    output:
        contigs = 'spades-transcript/{sample}/contigs.fasta'
    params:
        outdir = 'spades-transcript/{sample}',
        transcripts = 'spades-transcript/{sample}/transcripts.fasta'
    threads:
        int(config['threads'])
    log:
        'spades-transcript/{sample}/log/spades.log'
    shell:
        '''
        /usr/local/tools/spades-3.10.0/bin/spades.py \
            --rna \
            -1 {input.r1} \
            -2 {input.r2} \
            --threads {threads} \
            -o {params.outdir} \
        >  {log} \
        2> {log}

        mv {params.transcripts} {output.contigs}
        '''
