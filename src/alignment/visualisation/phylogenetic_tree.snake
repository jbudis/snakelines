import matplotlib.pyplot as plt
from Bio import Phylo
from Bio import SeqIO



rule phylo_visualise_phylogenetic_tree:
    input:
        contigs = '{path}/{genome}.aln',
        tree = '{path}/{genome}.aln.treefile'
    output:
        svg = '{path}/{genome}.aln.treefile.svg',
        ascii = '{path}/{genome}.aln.treefile.ascii',
    run:
        # If all sequences have defined proportion of reads they take in sample, append it to OTU labels
        labels = {}
        for contig in SeqIO.parse(input.contigs, 'fasta'):
            ratio_items = re.findall(r"ratio=(0\.\d+|1)", contig.description)
            if ratio_items and len(ratio_items) == 1:
                ratio = float(ratio_items[0])
                labels[contig.id] = '{contig.id}: {ratio: .2f}%'.format(contig=contig, ratio=ratio*100)
            else:
                labels = None
                break

        label_func = (lambda clade: labels.get(clade.name, '')) if labels else str

        phylo_tree = Phylo.read(input.tree, "newick")
        phylo_tree.ladderize()
        with open(output.ascii, 'w') as out_ascii:
            Phylo.draw_ascii(phylo_tree, file=out_ascii)
        Phylo.draw(phylo_tree, label_func=label_func, do_show=False)
        plt.savefig(output.svg,format='svg', bbox_inches='tight', dpi=300)