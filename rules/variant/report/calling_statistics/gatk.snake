rule gatk__fix_vcf_header:
    '''
    add missing sequence dictionary to vcf header
    '''
    input:
        vcf = 'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}.vcf',
        fasta = 'reference/{reference}/{reference}.fa'
    output:
        'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}.header_fix.vcf'
    log:
        out = 'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}/log/fix_vcf_header.out',
        err = 'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}/log/fix_vcf_header.err'
    shell:
        '''
        gatk4 SelectVariants \
            -V {input.vcf} \
            -R {input.fasta} \
            -O {output} \
            1>{log.out} \
            2>{log.err}
        '''


rule bgzip__bgzip_vcf:
    input:
        'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}.header_fix.vcf'
    output:
        'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}.header_fix.vcf.gz'
    shell:
        '''
        bgzip -c {input} > {output}
        '''


rule tabix__index_vcf:
    input:
        'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}.header_fix.vcf.gz'
    output:
        'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}.header_fix.vcf.gz.tbi'
    log:
        out = 'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}/log/index_vcf.out',
        err = 'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}/log/index_vcf.err'
    shell:
        '''
        tabix -p vcf {input} 1>{log.out} 2>{log.err}
        '''

rule picard__bed_to_interval_list:
    input:
        bed = 'reference/{reference}/annotation/wgs/regions.bed',
        seq_dict = 'reference/{reference}/{reference}.dict'
    output:
        intervals = 'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}.interval_list'
    log:
        out = 'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}/log/interval_list.out',
        err = 'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}/log/interval_list.err'
    shell:
        '''
        picard BedToIntervalList \
            INPUT={input.bed} \
            SEQUENCE_DICTIONARY={input.seq_dict} \
            OUTPUT={output.intervals} \
            SORT=true \
            UNIQUE=true \
            1>{log.out} \
            2>{log.err}
        '''

rule gatk__collect_variant_calling_metrics:
    input:
        vcf = 'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}.header_fix.vcf.gz',
        vcf_index = 'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}.header_fix.vcf.gz.tbi',
        # TODO
        dbsnp = 'reference/{reference}/variants/dbsnp/%s/gatk_ready.vcf' % method_config['dbsnp_version'],
        intervals = 'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}.interval_list'
    output:
        path = directory('mapping/{reference}/{map_type}/{caller}-{panel}/{sample}'),
        filename = 'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}.variant_calling_summary_metrics'
    log:
        out = 'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}/log/calling_report.out',
        err = 'mapping/{reference}/{map_type}/{caller}-{panel}/{sample}/log/calling_report.err'
    shell:
        '''
        gatk4 CollectVariantCallingMetrics \
            --INPUT {input.vcf} \
            --DBSNP {input.dbsnp} \
            --OUTPUT {output.path} \
            --THREAD_COUNT {threads} \
            --TARGET_INTERVALS {input.intervals} \
            1>{log.out} \
            2>{log.err}
        '''