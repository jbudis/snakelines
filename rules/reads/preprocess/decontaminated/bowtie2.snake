include: config['snakelines_dir'] + '/rules/mapping/mapper/indices/bowtie2_index.snake'

rule bowtie2__filter_reads_from_reference:
    '''
    Remove reads that do not map to the reference, and so may be caused by contamination in lab processing.
    Alternatively, using keep: False configuration removes all fragments that belongs to reference, and so is suitable
    to remove contamination caused by host with known genome, e.g. human fragments.
    '''
    input:
        r1 = 'reads/%s/{sample}_R1.fastq.gz' % tool_config['input_read_type'],
        r2 = 'reads/%s/{sample}_R2.fastq.gz' % tool_config['input_read_type'],
        index_files = expand('reference/{ref}/bowtie2_index/{ref}.1.bt2', ref=tool_config['references'])
    output:
        r1 = configured_temp('reads/decontaminated/{sample}_R1.fastq.gz'),
        r2 = configured_temp('reads/decontaminated/{sample}_R2.fastq.gz')
    params:
        indices = expand('reference/{reference}/bowtie2_index/{reference}', reference=tool_config['references']),
        keep_param = '--al-conc-gz' if tool_config.get('keep', False) else '--un-conc-gz'
    threads:
        int(config['threads'])
    log:
        prefix = 'reads/purified/log/{sample}'
    shell:
        '''
        TMP_DIR=reads/filtered/tmp
        R1_IN={input.r1}
        R2_IN={input.r2}

        for INDEX in {params.indices}; do

            REF=`basename $INDEX`
            REF_DIR=$TMP_DIR/$REF
            mkdir -p $REF_DIR

            R1_OUT=$REF_DIR/{wildcards.sample}_R1.fastq.gz
            R2_OUT=$REF_DIR/{wildcards.sample}_R2.fastq.gz
            R_MASK=$REF_DIR/{wildcards.sample}_R%.fastq.gz

            bowtie2 \
                -x $INDEX \
                -1 $R1_IN \
                -2 $R2_IN \
                --very-sensitive \
                --threads {threads} \
                {params.keep_param} $R_MASK \
            > /dev/null \
            2> {log.prefix}.$REF.log

            R1_IN=$R1_OUT
            R2_IN=$R2_OUT
        done

        mv $R1_OUT {output.r1}
        mv $R2_OUT {output.r2}

        rm -rf $TMP_DIR
        '''