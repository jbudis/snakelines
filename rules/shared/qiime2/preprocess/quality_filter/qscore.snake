rule qiime2__qscore:
    """
    Cut adapters from reads (paired or single-end). Calls 'qiime cutadapt trim-paired' or 'qiime cutadapt trim-single'
    :input trimmed_sequences: Sequences with cut adapters using qiime cutadapt
    :output qscore_sequences: Sequences passing quality filtering
    :params min_quality: int, scores less than this value are considered low 
    :params window_size: int, low score succession longer than this value are truncated from read
    :params min_length_fraction: float 0-1, read is not kept if fraction of truncated read length to input read length is less this value
    :params max_ambiguous: int, how many ambiguous bases can occur in truncated read at max
    """
    input:
        trimmed_sequences = 'reads/preprocess/demultiplex/{reference}.qza'
    output:
        qscore_sequences = 'reads/preprocess/qscore/{reference}.qza',
        qscore_stats = 'reads/preprocess/qscore/{reference}_stats.qza'
    log:
        out = 'reads/preprocess/qscore/log/{reference}.log',
        err = 'reads/preprocess/qscore/log/{reference}.err'
    params:
        min_quality = method_config.get('min_quality', 4), #scores less than this value are considered low 
        window_size = method_config.get('window_size', 3), #low score succession longer than this value are truncated from read
        min_length_fraction = method_config.get('min_length_fraction', 0.75), #if truncating results in read length of lesser fraction than this value, then read is not kept
        max_ambiguous = method_config.get('max_ambiguous', 0) #how many ambiguous bases can occur in truncated read
    conda:
        config['snakelines_dir'] + '/enviroments/qiime2.yaml'
    shell:
        '''
        qiime quality-filter q-score \
            --i-demux {input.trimmed_sequences} \
            --o-filtered-sequences {output.qscore_sequences} \
            --o-filter-stats {output.qscore_stats} \
            --p-min-quality {params.min_quality} \
            --p-quality-window {params.window_size} \
            --p-min-length-fraction {params.min_length_fraction} \
            --p-max-ambiguous {params.max_ambiguous}
        '''