rule qiime2__emperor__plot:
    """
    Creates visualization for time series data. Generates Emperor plots so that the resulting plot will contain axes for principal coordinate 1, principal coordinate 2, and custom axes column. It will use that last axis to explore how these samples changed over time.

    Calls 'qiime emperor plot'.

    :input pcoa_results: principal coordinates, qiime artifact of type PCoAResults, e.g. reads/qiime/silva16S-core-metrics-results-dn-99/bray_curtis_pcoa_results.qza
    :input metadata: samples' metadata filepath in TSV format (tab-separated value), e.g. description/silva16S-sample-metadata.tsv
    :output qzv: qiime visualization, e.g. reads/qiime/silva16S-core-metrics-results-dn-99/custom_axes/bray_curtis_emperor_days.qzv

    Note: column used for custom axes must be numerical, not categorical.
    """
    input:
        pcoa_results = 'reads/analysis/core_metrics/{reference}_{type}_pcoa.qza',
        metadata = 'description/sample-metadata.tsv'
    output:
        qzv = 'reads/analysis/core_metrics/pcoa_explore/{reference}_{type}_{column}_emperor.qzv'
    log:
        out = 'reads/analysis/core_metrics/log/{reference}_{type}_{column}_emperor.out',
        err = 'reads/analysis/core_metrics/log/{reference}_{type}_{column}_emperor.err'    
    conda:
        config['snakelines_dir'] + '/environments/qiime2.yaml'
    shell:
        '''
        qiime emperor plot \
            --i-pcoa {input.pcoa_results} \
            --m-metadata-file {input.metadata} \
            --p-custom-axes {wildcards.column} \
            --o-visualization {output.qzv} \
            1> {log.out} \
            2> {log.err}
        '''
