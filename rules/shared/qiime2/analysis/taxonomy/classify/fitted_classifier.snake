rule qiime2__taxonomy_fitted_classifier:
    """
    Classify reads by taxon using a fitted classifier

    Calls 'qiime feature-classifier classify-sklearn'.

    :input rep_seqs: qiime artifact of representative sequences
    :input classifier: qza artifact of trained classifier
    :output taxonomy: taxonomy of OTUs in samples, qiime artifact of type FeatureData[Taxonomy]
    :params tmp_dir: path to temporary directory, because job requires temporary a lot of free disk space, default /tmp might not be enough and path to mounted storage might be used instead
    """
    input:
        rep_seqs = 'reads/preprocess/denoise/{reference}_rep-seqs_all.qza',
        classifier = 'reference/{reference}/qiime2/classifier.qza'
    output:
        taxonomy  = 'reads/taxonomy/{reference}_tax.qza'
    params:
        confidence = method_config.get('confidence_threshold', 0.7)
    conda:
        config['snakelines_dir'] + '/enviroments/qiime2.yaml'
    log:
        out = 'reads/taxonomy/log/{reference}_fitting.out',
        err = 'reads/taxonomy/log/{reference}_fitting.err'    
    threads:
        int(config['threads'])
    shell:
        '''
        qiime feature-classifier classify-sklearn \
          --i-classifier {input.classifier} \
          --i-reads {input.rep_seqs} \
          --p-n-jobs {threads} \
          --p-confidence {params.confidence} \
          --o-classification {output.taxonomy}
        '''

rule qiime2__taxonomy_barplot:
    """
    :input table:
    :input taxonomy: produced taxonomy as qza
    :input metadata: samples metadata filepath in TSV format (tab-separated value), e.g. description/silva16S-sample-metadata.tsv
    """
    input:
        taxonomy = 'reads/taxonomy/{reference}_tax.qza',
        feature_table = 'reads/preprocess/denoise/{reference}_table.qza',
        metadata = 'description/sample-metadata.tsv'
    output:
        barplot = 'reads/taxonomy/{reference}_barplot.qzv'
    log:
        out = 'reads/taxonomy/log/{reference}_barplot.out',
        err = 'reads/taxonomy/log/{reference}_barplot.err' 
    conda:
        config['snakelines_dir'] + '/enviroments/qiime2.yaml'
    shell:
        '''    
        qiime taxa barplot \
          --i-table {input.feature_table} \
          --i-taxonomy {input.taxonomy} \
          --m-metadata-file {input.metadata} \
          --o-visualization {output.barplot}
        '''

rule qiime2__taxonomy_tabulate:
    """
    Visualize produced taxonomy classification

    Calls 'qiime metadata tabulate'

    :input taxonomy: produced taxonomy as qza
    :output qzv: visualization of produced taxonomy in qzv
    """
    input:
        taxonomy = 'reads/taxonomy/{reference}_tax.qza'
    output:
        qzv = 'reads/taxonomy/{reference}_taxa_features.qzv'
    conda:
        config['snakelines_dir'] + '/enviroments/qiime2.yaml'
    shell:
        '''
        qiime metadata tabulate \
          --m-input-file {input.taxonomy} \
          --o-visualization {output.qzv}
        '''