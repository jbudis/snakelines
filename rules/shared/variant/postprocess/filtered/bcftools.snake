#include: config['snakelines_dir'] + '/rules/shared/reference/annotation/regions.snake'
#include: config['snakelines_dir'] + '/rules/shared/reference/index/fai/samtools.snake'
#include: config['snakelines_dir'] + '/rules/shared/reference/index/dict/picard.snake'


rule bcftools__filter_vcf:
    """
      Left-align and normalize indels, check if REF alleles match the reference,
      split multiallelic sites into multiple rows; recover multiallelics from multiple rows.
      Left-alignment and normalization will only be applied if the --fasta-ref option is supplied.
      See: http://samtools.github.io/bcftools/bcftools.html#norm
    """
    input:
        vcf   = 'variant/{reference}-{panel}/%s/{sample}.vcf.gz' % method_config['input_variant_type'],
        tbi   = 'variant/{reference}-{panel}/%s/{sample}.vcf.gz.tbi' % method_config['input_variant_type']
    output:
        vcf   = 'variant/{reference}-{panel}/filtered/{sample}.vcf',
    params:
        snp_gap             = method_config.get('snp_gap', ''),
        indel_gap           = method_config.get('indel_gap', ''),
        set_gts             = method_config.get('set_gts', ''),
        include             = method_config.get('include', ''),
        trim_alt_alleles    = '--trim-alt-alleles' if method_config.get('trim_alt_alleles', False) else ''
    log:
        out = 'variant/{reference}-{panel}/filtered/log/{sample}.vcf.out',
        err = 'variant/{reference}-{panel}/filtered/log/{sample}.vcf.err'
    threads:
        int(config['threads'])
    benchmark:
          'variant/{reference}-{panel}/filtered/log/{sample}.vcf.benchmark',
    conda:
        config['snakelines_dir'] + '/environments/bcftools.yaml'
    shell:
        """
        snp_gap=''
        if [ ! -z '{params.snp_gap}' ]; then
            snp_gap='--SnpGap {params.snp_gap}'
        fi

        indel_gap=''
        if [ ! -z '{params.indel_gap}' ]; then
            indel_gap='--IndelGap {params.indel_gap}'
        fi

        set_gts=''
        if [ ! -z '{params.set_gts}' ]; then
            set_gts='--set-GTs {params.set_gts}'
        fi

        bcftools filter \
            {input.vcf} \
            --include '{params.include}' \
            $snp_gap \
            $indel_gap \
            $set_gts \
            --output-type u \
            2>> {log.err} \
            | \
        bcftools view \
            {params.trim_alt_alleles} \
            --output-type v \
            --output {output.vcf} \
            1> {log.out} \
            2>> {log.err}
        """
