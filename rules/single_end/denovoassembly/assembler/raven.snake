rule raven__create_assembly:
    """
    Create a draft assembly from basecalled fastq reads
    :input fastq: basecalled reads in fastq.gz format
    :output assembly: assembled contigs in fasta format
    :output graph: assembled contigs in graphical gfa format
    :param outdir: auxiliary directory, will be deleted in the end (do not change)
    :param assembly: outputted assembled contigs by Raven (do not change)
    :param graph: outputted graph by Raven (do not change)
    :param polish_iters: the number of used polishing iterations (set in config)
    """
    input:
        fastq = 'reads/basecalled/{sample}.fastq.gz'
    output:
        assembly = 'assembly/{sample}/assembly.fa',
        graph = 'assembly/{sample}/assembly_graph.gfa'
    params:
        outdir = 'assembly/{sample}/raven',
        assembly = 'assembly/{sample}/raven/assembly.fa',
        graph = 'assembly/{sample}/raven/assembly_graph.gfa',
        polish_iters = '-p %s' % method_config.get('iterations', '2')
    threads:
        int(config['threads'])
    log:
        err = 'assembly/{sample}/log/raven.err'
    conda:
        config['snakelines_dir'] + '/environments/raven.yaml'
    shell:
        """
        mkdir {params.outdir}
        raven \
            --graphical-fragment-assembly \
            {params.graph} \
            -t {threads} \
            --disable-checkpoints \
            {input.fastq} \
            > {params.assembly} \
            2> {log.err};

        # move desired outputs and remove useless ones
        mv {params.assembly} {output.assembly}
        mv {params.graph} {output.graph}
        rm -rf {params.outdir}
        """
