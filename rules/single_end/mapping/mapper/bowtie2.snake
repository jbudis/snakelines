include: config['snakelines_dir'] + '/rules/shared/mapping/mapper/indices/bowtie2_index.snake'

rule bowtie2__map_reads_to_reference:
    """
    For input preprocessed reads bowtie2 finds the most similar genomic region in the provided reference genome.
    :input read: gzipped fastq file with reads, e.g. 'reads/%s/{sample}_R1.fastq.gz'
    :input index: reference index (created by rule bowtie2__prepare_index), e.g. 'reference/{reference}/bowtie2_index/{reference}.1.bt2'
    :input ref: reference genome, e.g. 'reference/{reference}/{reference}.fa'
    :output bam: mapped read in BAM file, e.g. 'mapping/{reference}/original/{sample}.bam'
    :param index: name of reference, technically filename's path prefix, e.g. 'reference/{reference}/bowtie2_index/{reference}'
    :param additional: additional params
    """
    input:
        reads    = 'reads/%s/{sample}.fastq.gz' % pipeline.preprocessed_read_type,
        index = 'reference/{reference}/bowtie2_index/{reference}.1.bt2',
        ref   = 'reference/{reference}/{reference}.fa'
    output:
        bam   = configured_temp('mapping/{reference}/original/{sample}.bam')
    log:
        err   = 'mapping/{reference}/original/log/{sample}.bowtie2.map_stats'
    params:
        index = 'reference/{reference}/bowtie2_index/{reference}',
        additional = method_config.get('params', ''),
    threads:
        int(config['threads'])
    conda:
        config['snakelines_dir'] + '/enviroments/bowtie2_samtools.yaml'
    shell:
        """
        bowtie2 \
            -x {params.index} \
            -U {input.reads} \
            --threads {threads} \
            {params.additional} \
        2> {log.err} \
        | samtools view -bS - \
        > {output.bam}
        """
