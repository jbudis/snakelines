rule qiime__vsearch_cluster_features_de_novo:
    """
    Creates clusters of sequences (OTUs) with {similarity}% similarity

    Calls 'qiime vsearch cluster-features-de-novo'.

    :input table: qiime artifact of type FeatureTable[Frequency], e.g. reads/qiime/silva16S-table_imported.qza
    :input rep_seqs: qiime artifact of type FeatureData[Sequence], e.g. reads/qiime/silva16S-rep_seqs_imported.qza
    :output table: qiime artifact of type FeatureTable[Frequency] with similarity, e.g. reads/qiime/silva16S-table_clustered-dn-99.qza
    :output rep_seqs: qiime artifact of type FeatureData[Sequence] with similarity, e.g. reads/qiime/silva16S-rep_seqs_clustered-dn-99.qza
    :params similarity: *REQUIRED - similarity of sequences within cluster, values from 1 to 99 [%]
    """
    input:
        table     = 'reads/qiime/{name}-table_imported.qza',
        rep_seqs  = 'reads/qiime/{name}-rep_seqs_imported.qza'
    output:
        table     = 'reads/qiime/{name}-table_clustered-dn-{similarity}.qza',
        rep_seqs  = 'reads/qiime/{name}-rep_seqs_clustered-dn-{similarity}.qza'
    params:
        similarity = '{similarity}',
        tmp_dir   = method_config['tmp_dir'] if method_config.get('tmp_dir', '') != '' else '/tmp'
    threads:
        int(config['threads'])
    shell:
        '''
        export TMPDIR={params.tmp_dir}; qiime vsearch cluster-features-de-novo \
          --i-table {input.table} \
          --i-sequences {input.rep_seqs} \
          --p-perc-identity 0.{params.similarity} \
          --o-clustered-table {output.table} \
          --o-clustered-sequences {output.rep_seqs} \
          --p-threads {threads}
        '''
