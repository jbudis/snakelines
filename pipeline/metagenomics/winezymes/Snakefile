# Load configuration file
configfile: srcdir('config.yaml')

# Run startup scripts that automatically loads imports from src/ and load helper methods
include: config['snakelines_dir'] + '/src/snakelines.snake'

# Import sub-workflows
include: srcdir('Snakefile.read_quality_report')

# Find in configuration read preprocess types that should be generated
preprocess = extract_from_config(config, ['reads', 'preprocess'], {})
read_types_to_keep = [read_type for read_type in preprocess.keys() if not preprocess[read_type].get('temporary', True)]

rule finalise__winezymes:
    """
    """
    input:
        rules.finalise__quality_report.output,
#        rules.qiime__cluster_features_de_novo.output,
#        rules.qiime__create_metadata_file.output,
#        rules.qiime__tools_export.output,

        reads   = expand('reads/{read_type}/{sample}_R{orientation}.fastq.gz',
                              read_type=read_types_to_keep, sample=pipeline.samples, orientation=[1,2]),

        read_quality_report = 'reads/qiime/joined-imported/index.html',

        otu_report = expand('reads/qiime/joined-{type}-dn-{similarity}/index.html',
                            type=['rep-seqs', 'table'],
                            similarity=config['qiime']['preprocess']['cluster']['similarity']),

#        rarefield = 'reads/qiime/joined-core-metrics-results/rarefied_table.qza'
        taxonomy   = 'reads/qiime/joined-taxonomy-dn-99.qza',

        taxonomy_report = expand('reads/qiime/joined-{type}-dn-{similarity}/index.html',
                                type=['taxonomy', 'taxa-barplots'],
                                similarity=config['qiime']['analysis']['core_metrics']['similarity']),

#        alpha_group_significance = expand('reads/qiime/joined-core-metrics-results/alpha/{type}_group_significance.qzv',
#                                          type=['evenness', 'faith_pd', 'observed_otus', 'shannon']),

        alpha_group_significance_reports = expand('reads/qiime/joined-core-metrics-results/alpha/{type}_group_significance/index.html',
                                                    type=config['qiime']['analysis']['core_metrics']['alpha_types']),
#                                                  type=['evenness', 'faith_pd', 'observed_otus', 'shannon']),

#        beta_group_significance = expand('reads/qiime/joined-core-metrics-results/beta/{type}_{column}_significance.qzv',
#                                          type=['bray_curtis', 'jaccard', 'unweighted_unifrac', 'weighted_unifrac'],
#                                                  column=['col1', 'col2', 'col3', 'col4', 'col5', 'col6']),

        beta_group_significance_reports = expand('reads/qiime/joined-core-metrics-results/beta/{type}_{column}_significance/index.html',
                                                  type=config['qiime']['analysis']['core_metrics']['beta_types'],
#                                                  type=['bray_curtis', 'jaccard', 'unweighted_unifrac', 'weighted_unifrac'],
                                                  column=config['qiime_beta_significance_columns']),

        emperor_plot_reports = expand('reads/qiime/joined-core-metrics-results/{type}_emperor/index.html',
                                                  type=config['qiime']['analysis']['core_metrics']['emperor_types']),

#        # requires sample-metadata with numeric columns
#        custom_axes_emperor_plot_reports = expand('reads/qiime/joined-core-metrics-results/custom_axes/{type}_emperor_{column}/index.html',
#                                                  type=config['qiime']['analysis']['core_metrics']['emperor_types'],
#                                                  column=['col3', 'col4'])



# Target rule would be executed locally, not on cluster
localrules: finalise__winezymes