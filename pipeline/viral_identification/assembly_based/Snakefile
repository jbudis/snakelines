# TODO check if blast references exists

# Load configuration file
configfile: srcdir('config.yaml')

# Run startup scripts that automatically loads imports from src/ and load helper methods
include: config['snakelines_dir'] + '/src/snakelines.snake'

# Import sub-workflows
include: config['snakelines_dir'] + '/pipeline/standard_analysis/read_quality_report/Snakefile.rule'
include: config['snakelines_dir'] + '/pipeline/standard_analysis/preprocess/Snakefile.rule'
include: config['snakelines_dir'] + '/pipeline/standard_analysis/mapping/Snakefile.rule'

rule finalise__identify_viruses:
    """
    Pipeline annotates assembled contigs from preprocessed reads. Annotations, such as homologies with
    reference databases, coverage and results of prediction tools are presented in sortable, filterable HTML table.
    :input summary_html: summary HTML report with annotations of assembled contigs
    :output summary_html: summary HTML report with annotations of assembled contigs (in the report directory)
    """
    input:
        rules.finalise__quality_report.output,
        rules.finalise__preprocess_reads.output,
        rules.finalise__assemble_reads.output,

        summary_html = expand('assembly/{sample}/annotation/contigs/summary.html',
                               sample=pipeline.samples),

    output:
        summary_html = expand('{report_dir}/{sample}/contig_annotations.html',
                               sample=pipeline.samples, report_dir=config['report_dir']),

    run:
        copy_input_files_with_consistent_output_names(input, output)

# Target rule would be executed locally, not on cluster
localrules: finalise__identify_viruses