# Load configuration file
configfile: srcdir('config.yaml')

# Run startup scripts that automatically loads imports from src/ and load helper methods
include: config['snakelines_dir'] + '/src/snakelines.snake'

# Import sub-workflows
include: srcdir('Snakefile.read_quality_report')
include: srcdir('Snakefile.preprocess')
include: srcdir('Snakefile.mapping')

# TODO add panel
rule finalise__call_germline_variants:
    """
    Pipeline identify SNPs and small insertions/deletions from mapped reads.
    :input variant: SNP and indel variants in VCF file
    :input report: Summary PDF report
    :output variant: SNP and indel variants in VCF file (in the report directory)
    :output report: Summary PDF report (in the report directory)
    """
    input:
        rules.finalise__quality_report.output,
        rules.finalise__preprocess_reads.output,
        rules.finalise__map_reads_to_reference.output,

        variants = expand(
            'variant/{sr.reference}-wgs/original/{sr.sample}.vcf',
            sr=pipeline.sample_references,
            map_type=pipeline.postprocessed_map_type
        ),

        report = expand(
            'variant/{sr.reference}-wgs/original/report/{sr.sample}.pdf',
            sr=pipeline.sample_references
        ),

    output:
        variants = expand(
            '{report_dir}/{sr.reference}/samples/{sr.sample}/variants.vcf',
            report_dir=config['report_dir'],
            sr=pipeline.sample_references
        ),

        report = expand(
            '{report_dir}/{sr.reference}/samples/{sr.sample}/summary.pdf',
            report_dir=config['report_dir'], sr=pipeline.sample_references,
        )

    run:
        copy_input_files_with_consistent_output_names(input, output)

# Target rule would be executed locally, not on cluster
localrules: finalise__call_germline_variants