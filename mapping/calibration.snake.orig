#!python

include:
	'bowtie2.snake'

THREADS = 32

rule mark_duplicates:
	input:
		'{mapper}/{reference}/{sample}.bam',
	output:
		bam = '{mapper}/{reference}/{sample}.dup.bam',
		bai = '{mapper}/{reference}/{sample}.dup.bam.bai',
	log:
		proc = '{mapper}/{reference}/log/{sample}.dup',
		stat = '{mapper}/{reference}/log/{sample}.dup.stats'
	shell:
		'''
		picard MarkDuplicates \
			I={input} \
			O={output.bam} \
			M={log.stat} \
		>  {log.proc}

		samtools index {output.bam}
		'''

rule intervals_for_realign:
	input:
		bam = '{mapper}/{reference}/{sample}.dup.bam',
		bai = '{mapper}/{reference}/{sample}.dup.bam.bai',
		refdict = 'reference/{reference}/{reference}.dict',
		reffasta = 'reference/{reference}/{reference}.fa'
	output:
		temp('{mapper}/{reference}/{sample}.dup.intervals')
	threads:
		THREADS
	log:
		'{mapper}/{reference}/log/{sample}.intervals'
	shell:
		'''
		gatk RealignerTargetCreator \
			-R {input.reffasta} \
			-nt {threads} \
			-I {input.bam} \
			-o {output} \
		> {log}
		'''

rule realign:
	input:
		bam = '{mapper}/{reference}/{sample}.dup.bam',
		intervals = '{mapper}/{reference}/{sample}.dup.intervals',
		reffasta = 'reference/{reference}/{reference}.fa'
	output:
		bam = '{mapper}/{reference}/{sample}.dup.realign.bam'
#		bai = '{mapper}/{reference}/{sample}.dup.realign.bam.bai'
	log:
		'{mapper}/{reference}/log/{sample}.realign'
	shell:
		'''
		gatk IndelRealigner \
			-R {input.reffasta} \
			-I {input.bam} \
			-targetIntervals {input.intervals} \
			-o {output.bam} \
		> {log}

		samtools index \
			{output.bam} \
		>> {log}
		'''
