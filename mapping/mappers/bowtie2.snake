rule map_reads:
    input:
        r1 = 'reads/%s/{sample}_R1.fastq.gz' % config['mapping']['read_type'],
        r2 = 'reads/%s/{sample}_R2.fastq.gz' % config['mapping']['read_type'],
        index = 'reference/{reference}/bowtie2_index/{reference}.1.bt2',
        reffasta = 'reference/{reference}/{reference}.fa'
    output:
        bam = 'bowtie2/{reference}/{sample}.bam'
    log:
        'bowtie2/{reference}/log/{sample}.map'
    params:
        index = 'reference/{reference}/bowtie2_index/{reference}',
        tmpdir = 'bowtie2/{reference}/tmp/',
        additional = config['mapping']['params']
    threads:
        int(config['threads'])
    shell:
        '''
        bowtie2 \
            -x {params.index} \
            -1 {input.r1} \
            -2 {input.r2} \
            --threads {threads} \
            {params.additional} \
        2> {log} \
        | samtools view \
            -b \
            --reference {input.reffasta} \
            --threads {threads} \
            - \
        | samtools sort \
            --threads {threads} \
            -o {output.bam} \
            -T {params.tmpdir} \
            -m 5G \
            - \
        '''

rule filter_reads:
    input:
        r1 = 'reads/%s/{sample}_R1.fastq.gz' % config['prefilter']['read_type'],
        r2 = 'reads/%s/{sample}_R2.fastq.gz' % config['prefilter']['read_type'],
        index_files = expand('reference/{ref}/bowtie2_index/{ref}.1.bt2', ref=config['prefilter']['references'])
    output:
        r1 = 'reads/filtered/{sample}_R1.fastq.gz',
        r2 = 'reads/filtered/{sample}_R2.fastq.gz'
    log:
        'reads/filtered/log/{sample}.map'
    params:
        indices = ['reference/%s/bowtie2_index/%s' % (ref, ref) for ref in config['prefilter']['references']]
    threads:
        int(config['threads'])
    shell:
        '''
        R1_IN={input.r1}
        R2_IN={input.r2}

        for INDEX in {params.indices}; do

            REF=`basename $INDEX`
            REF_DIR=reads/filtered-$REF
            mkdir -p $REF_DIR

            R1_OUT=$REF_DIR/{wildcards.sample}_R1.fastq.gz
            R2_OUT=$REF_DIR/{wildcards.sample}_R2.fastq.gz
            R_MASK=$REF_DIR/{wildcards.sample}_R%.fastq.gz

            bowtie2 \
                -x $INDEX \
                -1 $R1_IN \
                -2 $R2_IN \
                --very-sensitive \
                --threads {threads} \
                --un-conc-gz $R_MASK \
            > /dev/null \
            2> $REF_DIR/{wildcards.sample}.log

            R1_IN=$R1_OUT
            R2_IN=$R2_OUT
        done

        mv $R1_OUT {output.r1}
        mv $R2_OUT {output.r2}
        '''

rule bowtie2_index:
    input:
        'reference/{genome}/{sequence}.fa'
    output:
        protected('reference/{genome}/bowtie2_index/{sequence}.1.bt2'),
        protected('reference/{genome}/bowtie2_index/{sequence}.2.bt2'),
        protected('reference/{genome}/bowtie2_index/{sequence}.3.bt2'),
        protected('reference/{genome}/bowtie2_index/{sequence}.4.bt2'),
        protected('reference/{genome}/bowtie2_index/{sequence}.rev.1.bt2'),
        protected('reference/{genome}/bowtie2_index/{sequence}.rev.2.bt2')
    params:
        index = 'reference/{genome}/bowtie2_index/{sequence}'
    log:
        'reference/{genome}/log/bowtie2.log'
    threads:
        int(config['threads'])
    shell:
        '''
        bowtie2-build \
            --threads {threads} \
            {input} \
            {params.index} \
        > {log}
        '''

