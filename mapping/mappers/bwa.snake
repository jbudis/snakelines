include: srcdir('indices/bwa_index.snake')

rule bwa_map_reads:
    input:
        r1 = 'reads/{read_type}/{sample}_R1.fastq.gz',
        r2 = 'reads/{read_type}/{sample}_R2.fastq.gz',
        index = 'reference/{reference}/bwa_index/{reference}.bwt',
        reffasta = 'reference/{reference}/{reference}.fa'
    output:
        bam = 'bwa/{reference}/{read_type}/{sample}.bam'
    log:
        'bwa/{reference}/{read_type}/log/{sample}.map'
    params:
        index = 'reference/{reference}/bwa_index/{reference}',
        tmpdir = 'bwa/{reference}/{read_type}/tmp/',
        additional = config['mapping']['params'] if 'params' in config['mapping'] else '',
        min_map_quality = config['mapping']['min_map_quality'] if 'min_map_quality' in config['mapping'] else 0,
        skip_flags = config['mapping']['skip_flags'] if 'skip_flags' in config['mapping'] else 0,
    benchmark:
        'bwa/{reference}/{read_type}/benchmark/{sample}.txt'
    threads:
        int(config['threads'])
    shell:
        '''
        hostname > {log}.host;
        bwa mem \
            -t {threads} \
            {params.additional} \
            {params.index} \
            {input.r1} \
            {input.r2} \
        2> {log} \
        | samtools view \
            -b \
            -q {params.min_map_quality} \
            -F {params.skip_flags} \
            --reference {input.reffasta} \
            --threads {threads} \
            - \
        | samtools sort \
            --threads {threads} \
            -o {output.bam} \
            -T {params.tmpdir} \
            -m 5G \
            - \
        '''